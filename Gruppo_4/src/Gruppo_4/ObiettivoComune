package Gruppo_4;

public class ObiettivoComune {


	boolean ObiettivoComune1(Integer[][] libreria) {
		int contatore=0;
		for(int i=0; i<4; i++) { 					//i riga, che faccio scorrere
			for(int j=0; j<3; j++) { 				//j colonna, che faccio scorrere
				if(libreria[i][j]==libreria[i][j+1]&&libreria[i][j]==libreria[i+1][j]&&libreria[i][j]==libreria[i+1][j+1]) {
					contatore++; 				//serve a controllare quante volte la condizione dell'if è vera 
				}
			}
		}
		if(contatore>=2) { 						// vedere quante volte è presente la condizione dell'obiettivo
			return true;
		}
		else {
			return false;
		}
	}
	
	boolean ObiettivoComune2(Integer[][] libreria) {
		int contatore=0;						//inizializzo contatore per vedere quante volte viene eseguito questo obiettivo
		for(int j=0; j<4; j++) {					//facciamo scorrere le colonne
			for(int numColonne = 0; numColonne<4; numColonne++) {	//facciamo scorrere le righe
				int coloriUguali = 0;							
				for (int colori=1; colori<=6; colori++) {	//vediamo se ci sono colori uguali
					if(libreria[numColonne][j]==colori){			
						coloriUguali++;
					}
				}
				if(coloriUguali==1) {				//controlliamo qunati colori ci sono uguali nella matrice e vediamo qunanti ce ne sono
					contatore++;
				}

			}
		}
		if(contatore>=2) {						//controlli se l'obiettivo è stato raggiunto
			return true;
		}
		else {
			return false;
		}
	}
	
	boolean ObiettivoComune3(Integer[][] libreria) {
		int contatore=0;
		for(int i=0; i<3; i++) {                                        //i riga, che faccio scorrere
			for(int j=0; j<5; j++) {                                //j colonna, che faccio scorrere
				if(libreria[i][j]==libreria[i][j+1]&&libreria[i][j]==libreria[i][j+2]&&libreria[i][j]==libreria[i][j+3]) {
					contatore++;                            //serve a controllare quante volte la condizione dell'if è vera
				}
			}
		}
		if(contatore>=4) {                                              // vedere quante volte è presente la condizione dell'obiettivo
			return true;
		}
		else {
			return false;
		}
	}
	
	boolean ObiettivoComune5(Integer[][] libreria) {
		int contatore=0;
		int i=0;
		for(int j=0; j<5; j++) { 
			if (libreria[i][j]==libreria[i+1][j]&&libreria[i][j]==libreria[i+2][j]&&libreria[i][j]==libreria[i+3][j]&&libreria[i][j]==libreria[i+4][j]&&libreria[i][j]==libreria[i+5][j]) {
				contatore++;
			}
			else if() {
				contatore++;
			}
			else if() {
				contatore++;
			}
		}
	
		if(contatore>=3) {						//controlli se l'obiettivo è stato raggiunto
			return true;
		}
		else {
			return false;
		}
		
	}
	
	boolean ObiettivoComune6(Integer[][] libreria) {
		int contatore=0;						//inizializzo contatore per vedere quante volte viene eseguito questo obiettivo
		for(int i=0; i<5; i++) {					//facciamo scorrere le colonne
			for(int numRighe = 0; numRighe<6; numRighe++) {		//facciamo scorrere le righe
				int coloriUguali = 0;							
				for (int colori=1; colori<=6; colori++) {	//vediamo se ci sono colori uguali
					if(libreria[i][numRighe]==colori){			
						coloriUguali++;
					}
				}
				if(coloriUguali==1) {				//controlliamo qunati colori ci sono uguali nella matrice e vediamo qunanti ce ne sono
					contatore++;
				}

			}
		}
		if(contatore>=2) {						//controlli se l'obiettivo è stato raggiunto
			return true;
		}
		else {
			return false;
		}
	}
	
	boolean ObiettivoComune8(Integer[][] libreria) {

		if(libreria[0][0]==libreria[0][4]&&libreria[0][0]==libreria[5][0]&&libreria[0][0]==libreria[5][4]) {
			return true;                                           //vedo sela condizione dell'if e quindi l'obiettivo sia vera
		}
		else {
			return false;
		}
	}

	boolean ObiettivoComune10(Integer[][] libreria) {
		int contatore=0;
		for(int i=0; i<3; i++) { 					//i riga, che faccio scorrere
			for(int j=0; j<2; j++) { 				//j colonna, che faccio scorrere
				if(libreria[i][j]==libreria[i][j+2]&&libreria[i][j]==libreria[i+2][j]&&
						libreria[i][j]==libreria[i+1][j+1]&&libreria[i][j]==libreria[i+2][j+2]) {
					contatore++;  				//serve a controllare quante volte la condizione dell'if è vera 
				}
			}
		}
		if(contatore>=1) { 						// vedere quante volte è presente la condizione dell'obiettivo
			return true;
		}
		else {
			return false;
		}
	}
	
	boolean ObiettivoComune11(Integer[][] libreria) {
		int contatore=0;
		int i = 0; 							//j colonna, che faccio scorrere
		int j = 0;		

										//vari casi dell'obiettivo numero 11

		if(libreria[i][j]==libreria[i+1][j+1]&&libreria[i][j]==libreria[i+2][j+2]&&
				libreria[i][j]==libreria[i+3][j+3]&&libreria[i][j]==libreria[i+4][j+4]) {
			contatore++;  						//serve a controllare quante volte la condizione dell'if è vera 
		}else if(libreria[i+1][j]==libreria[i+2][j+1]&&libreria[i+1][j]==libreria[i+3][j+2]&&
				libreria[i+1][j]==libreria[i+4][j+3]&&libreria[i+1][j]==libreria[i+5][j+4]) {
			contatore++;
		}else if(libreria[i][j+4]==libreria[i+1][j+3]&&libreria[i][j+4]==libreria[i+2][j+2]&&
				libreria[i][j+4]==libreria[i+3][j+1]&&libreria[i][j+4]==libreria[i+4][j]) {
			contatore++;
		}else if(libreria[i+1][j+4]==libreria[i+2][j+3]&&libreria[i+1][j+4]==libreria[i+3][j+2]&&
				libreria[i+1][j+4]==libreria[i+4][j+1]&&libreria[i+1][j+4]==libreria[i+5][j]) {
			contatore++;
		}

		if(contatore>=1) { 						// vedere quante volte è presente la condizione dell'obiettivo
			return true;
		}
		else {
			return false;
		}
	}
	
	boolean ObiettivoComune12(Integer[][] libreria) {
		int contatore=0;

		if(libreria[1][0]!=0&&libreria[1][0]==libreria[2][1]&&libreria[1][0]==libreria[3][2]&&libreria[1][0]==libreria[4][3]&&libreria[1][0]==libreria[5][4]) { //controllo che le caselle siano piene
			if(libreria[0][0]==0&&libreria[0][0]==libreria[1][1]&&libreria[0][0]==libreria[2][2]&&libreria[0][0]==libreria[3][3]&&libreria[0][0]==libreria[4][4]) {
				contatore++; //controllo che le caselle sopra quelle controllate precedentemente siano vuote
			}
		}
		else if(libreria[1][4]!=0&&libreria[1][4]==libreria[2][3]&&libreria[1][4]==libreria[3][2]&&libreria[1][4]==libreria[4][1]&&libreria[1][4]==libreria[5][0]) { //controllo che le caselle siano piene
			if(libreria[0][4]==0&&libreria[0][4]==libreria[1][3]&&libreria[0][4]==libreria[2][2]&&libreria[0][4]==libreria[3][1]&&libreria[0][4]==libreria[4][0]){
				contatore++; //controllo che le caselle sopra quelle controllate precedentemente siano vuote
			}
		}

		if(contatore!=1) {
			return false; //non è vera nessuna condizione degli if
		}
		else {
			return true; //è vero almeno uno dei due cicli if
		}

	}
	
}	
